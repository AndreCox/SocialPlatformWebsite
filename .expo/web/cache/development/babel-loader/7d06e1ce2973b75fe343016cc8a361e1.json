{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AccessibilityUtil = _interopRequireDefault(require(\"../AccessibilityUtil\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../exports/StyleSheet\"));\n\nvar _styleResolver2 = _interopRequireDefault(require(\"../../exports/StyleSheet/styleResolver\"));\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar emptyObject = {};\n\nvar resetStyles = _StyleSheet.default.create({\n  ariaButton: {\n    cursor: 'pointer'\n  },\n  button: {\n    appearance: 'none',\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariant: ['inherit'],\n    fontWeight: 'inherit',\n    lineHeight: 'inherit',\n    textAlign: 'inherit'\n  },\n  heading: {\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariant: ['inherit'],\n    fontWeight: 'inherit',\n    lineHeight: 'inherit'\n  },\n  link: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    textDecorationLine: 'none'\n  },\n  list: {\n    listStyle: 'none'\n  }\n});\n\nvar pointerEventsStyles = _StyleSheet.default.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style) {\n  return _styleResolver2.default.resolve(style);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = _AccessibilityUtil.default.isDisabled(props);\n\n  var role = _AccessibilityUtil.default.propsToAriaRole(props);\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  }\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  }\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (_AccessibilityUtil.default.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = [component === 'a' && resetStyles.link, component === 'button' && resetStyles.button, role === 'heading' && resetStyles.heading, component === 'ul' && resetStyles.list, role === 'button' && !disabled && resetStyles.ariaButton, pointerEvents && pointerEventsStyles[pointerEvents], providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  }];\n\n  var _styleResolver = styleResolver(reactNativeStyle),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className && className.constructor === String) {\n    domProps.className = props.className ? props.className + \" \" + className : className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  }\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  }\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nvar _default = createDOMProps;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ANDRE/source/repos/SocialPlatform/Website/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","emptyObject","resetStyles","StyleSheet","create","ariaButton","cursor","button","appearance","backgroundColor","color","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","lineHeight","textAlign","heading","link","textDecorationLine","list","listStyle","pointerEventsStyles","auto","pointerEvents","none","defaultStyleResolver","style","styleResolver","resolve","createDOMProps","component","props","_props","accessibilityLabel","accessibilityLiveRegion","accessibilityStates","importantForAccessibility","nativeID","placeholderTextColor","providedStyle","testID","accessible","accessibilityComponentType","accessibilityRole","accessibilityTraits","domProps","disabled","AccessibilityUtil","isDisabled","role","propsToAriaRole","constructor","String","Array","isArray","focusable","tabIndex","buttonLikeRoles","reactNativeStyle","_styleResolver","className","id","rel"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nvar emptyObject = {};\nvar resetStyles = StyleSheet.create({\n  ariaButton: {\n    cursor: 'pointer'\n  },\n  button: {\n    appearance: 'none',\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariant: ['inherit'],\n    fontWeight: 'inherit',\n    lineHeight: 'inherit',\n    textAlign: 'inherit'\n  },\n  heading: {\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariant: ['inherit'],\n    fontWeight: 'inherit',\n    lineHeight: 'inherit'\n  },\n  link: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    textDecorationLine: 'none'\n  },\n  list: {\n    listStyle: 'none'\n  }\n});\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style) {\n  return styleResolver.resolve(style);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props); // GENERAL ACCESSIBILITY\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  } // DISABLED\n\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  } // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n  // Resolve React Native styles to optimized browser equivalent\n\n\n  var reactNativeStyle = [component === 'a' && resetStyles.link, component === 'button' && resetStyles.button, role === 'heading' && resetStyles.heading, component === 'ul' && resetStyles.list, role === 'button' && !disabled && resetStyles.ariaButton, pointerEvents && pointerEventsStyles[pointerEvents], providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  }];\n\n  var _styleResolver = styleResolver(reactNativeStyle),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className && className.constructor === String) {\n    domProps.className = props.className ? props.className + \" \" + className : className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  } // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  } // Automated test IDs\n\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"]},"metadata":{},"sourceType":"script"}