{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _applyLayout = _interopRequireDefault(require(\"../../modules/applyLayout\"));\n\nvar _applyNativeMethods = _interopRequireDefault(require(\"../../modules/applyNativeMethods\"));\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _react = require(\"react\");\n\nvar _ColorPropType = _interopRequireDefault(require(\"../ColorPropType\"));\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _findNodeHandle = _interopRequireDefault(require(\"../findNodeHandle\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _StyleSheetPropType = _interopRequireDefault(require(\"../../modules/StyleSheetPropType\"));\n\nvar _TextInputStylePropTypes = _interopRequireDefault(require(\"./TextInputStylePropTypes\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nvar _ViewPropTypes = _interopRequireDefault(require(\"../ViewPropTypes\"));\n\nvar _propTypes = require(\"prop-types\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar isAndroid = _ExecutionEnvironment.canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end;\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput = function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      _TextInputState.default._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          onChangeText = _this$props.onChangeText;\n      var text = e.nativeEvent.text;\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props2 = _this.props,\n          clearTextOnFocus = _this$props2.clearTextOnFocus,\n          onFocus = _this$props2.onFocus,\n          selectTextOnFocus = _this$props2.selectTextOnFocus;\n      var node = _this._node;\n      _TextInputState.default._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      e.stopPropagation();\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props3 = _this.props,\n          blurOnSubmit = _this$props3.blurOnSubmit,\n          multiline = _this$props3.multiline,\n          onKeyPress = _this$props3.onKeyPress,\n          onSubmitEditing = _this$props3.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props4 = _this.props,\n          onSelectionChange = _this$props4.onSelectionChange,\n          _this$props4$selectio = _this$props4.selection,\n          selection = _this$props4$selectio === void 0 ? emptyObject : _this$props4$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = (0, _findNodeHandle.default)(component);\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return _TextInputState.default.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      _TextInputState.default._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        autoComplete = _this$props5.autoComplete,\n        autoCorrect = _this$props5.autoCorrect,\n        editable = _this$props5.editable,\n        keyboardType = _this$props5.keyboardType,\n        multiline = _this$props5.multiline,\n        numberOfLines = _this$props5.numberOfLines,\n        secureTextEntry = _this$props5.secureTextEntry,\n        style = _this$props5.style,\n        blurOnSubmit = _this$props5.blurOnSubmit,\n        clearTextOnFocus = _this$props5.clearTextOnFocus,\n        onChangeText = _this$props5.onChangeText,\n        onLayout = _this$props5.onLayout,\n        onSelectionChange = _this$props5.onSelectionChange,\n        onSubmitEditing = _this$props5.onSubmitEditing,\n        selection = _this$props5.selection,\n        selectTextOnFocus = _this$props5.selectTextOnFocus,\n        spellCheck = _this$props5.spellCheck,\n        accessibilityViewIsModal = _this$props5.accessibilityViewIsModal,\n        allowFontScaling = _this$props5.allowFontScaling,\n        caretHidden = _this$props5.caretHidden,\n        clearButtonMode = _this$props5.clearButtonMode,\n        dataDetectorTypes = _this$props5.dataDetectorTypes,\n        disableFullscreenUI = _this$props5.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props5.enablesReturnKeyAutomatically,\n        hitSlop = _this$props5.hitSlop,\n        inlineImageLeft = _this$props5.inlineImageLeft,\n        inlineImagePadding = _this$props5.inlineImagePadding,\n        inputAccessoryViewID = _this$props5.inputAccessoryViewID,\n        keyboardAppearance = _this$props5.keyboardAppearance,\n        needsOffscreenAlphaCompositing = _this$props5.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props5.onAccessibilityTap,\n        onContentSizeChange = _this$props5.onContentSizeChange,\n        onEndEditing = _this$props5.onEndEditing,\n        onMagicTap = _this$props5.onMagicTap,\n        onScroll = _this$props5.onScroll,\n        removeClippedSubviews = _this$props5.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props5.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props5.returnKeyLabel,\n        returnKeyType = _this$props5.returnKeyType,\n        scrollEnabled = _this$props5.scrollEnabled,\n        selectionColor = _this$props5.selectionColor,\n        selectionState = _this$props5.selectionState,\n        shouldRasterizeIOS = _this$props5.shouldRasterizeIOS,\n        textBreakStrategy = _this$props5.textBreakStrategy,\n        textContentType = _this$props5.textContentType,\n        underlineColorAndroid = _this$props5.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props5, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"secureTextEntry\", \"style\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"returnKeyType\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n    (0, _extends2.default)(otherProps, {\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      dir: 'auto',\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect,\n      style: [styles.initial, style]\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return (0, _createElement.default)(component, otherProps);\n  };\n\n  return TextInput;\n}(_react.Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false,\n  style: emptyObject\n};\nTextInput.State = _TextInputState.default;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, _ViewPropTypes.default, {\n  autoCapitalize: (0, _propTypes.oneOf)(['characters', 'none', 'sentences', 'words']),\n  autoComplete: _propTypes.string,\n  autoCorrect: _propTypes.bool,\n  autoFocus: _propTypes.bool,\n  blurOnSubmit: _propTypes.bool,\n  clearTextOnFocus: _propTypes.bool,\n  defaultValue: _propTypes.string,\n  editable: _propTypes.bool,\n  inputAccessoryViewID: _propTypes.string,\n  keyboardType: (0, _propTypes.oneOf)(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxLength: _propTypes.number,\n  multiline: _propTypes.bool,\n  numberOfLines: _propTypes.number,\n  onBlur: _propTypes.func,\n  onChange: _propTypes.func,\n  onChangeText: _propTypes.func,\n  onFocus: _propTypes.func,\n  onKeyPress: _propTypes.func,\n  onSelectionChange: _propTypes.func,\n  onSubmitEditing: _propTypes.func,\n  placeholder: _propTypes.string,\n  placeholderTextColor: _ColorPropType.default,\n  secureTextEntry: _propTypes.bool,\n  selectTextOnFocus: _propTypes.bool,\n  selection: (0, _propTypes.shape)({\n    start: _propTypes.number.isRequired,\n    end: _propTypes.number\n  }),\n  spellCheck: _propTypes.bool,\n  style: (0, _StyleSheetPropType.default)(_TextInputStylePropTypes.default),\n  value: _propTypes.string,\n  caretHidden: _propTypes.bool,\n  clearButtonMode: _propTypes.string,\n  dataDetectorTypes: _propTypes.string,\n  disableFullscreenUI: _propTypes.bool,\n  enablesReturnKeyAutomatically: _propTypes.bool,\n  keyboardAppearance: _propTypes.string,\n  inlineImageLeft: _propTypes.string,\n  inlineImagePadding: _propTypes.number,\n  onContentSizeChange: _propTypes.func,\n  onEndEditing: _propTypes.func,\n  onScroll: _propTypes.func,\n  returnKeyLabel: _propTypes.string,\n  returnKeyType: _propTypes.string,\n  selectionColor: _ColorPropType.default,\n  selectionState: _propTypes.any,\n  textBreakStrategy: _propTypes.string,\n  underlineColorAndroid: _ColorPropType.default\n}) : {};\n\nvar styles = _StyleSheet.default.create({\n  initial: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    borderColor: 'black',\n    borderRadius: 0,\n    borderStyle: 'solid',\n    borderWidth: 0,\n    boxSizing: 'border-box',\n    fontFamily: 'System',\n    fontSize: 14,\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = (0, _applyLayout.default)((0, _applyNativeMethods.default)(TextInput));\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ANDRE/source/repos/SocialPlatform/Website/node_modules/react-native-web/dist/exports/TextInput/index.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","isAndroid","canUseDOM","test","navigator","userAgent","emptyObject","normalizeEventHandler","handler","e","nativeEvent","text","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setTimeout","setSelectionRange","TextInput","_Component","_this","_len","args","Array","_key","call","apply","_handleBlur","onBlur","props","TextInputState","_currentlyFocusedNode","_handleChange","_this$props","onChange","onChangeText","_handleSelectionChange","_handleFocus","_this$props2","clearTextOnFocus","onFocus","selectTextOnFocus","_node","clear","select","_handleKeyDown","stopPropagation","metaKey","_handleKeyPress","_this$props3","blurOnSubmit","multiline","onKeyPress","onSubmitEditing","blurOnSubmitDefault","shouldBlurOnSubmit","keyValue","altKey","ctrlKey","shiftKey","isDefaultPrevented","preventDefault","blur","_this$props4","onSelectionChange","_this$props4$selectio","_setNode","component","_proto","isFocused","currentlyFocusedField","componentDidMount","document","activeElement","componentDidUpdate","render","_this$props5","autoComplete","autoCorrect","editable","keyboardType","numberOfLines","secureTextEntry","style","onLayout","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","needsOffscreenAlphaCompositing","onAccessibilityTap","onContentSizeChange","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","returnKeyType","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid","otherProps","type","dir","onKeyDown","onSelect","readOnly","ref","styles","initial","rows","Component","displayName","defaultProps","autoCapitalize","State","propTypes","process","env","NODE_ENV","ViewPropTypes","string","bool","autoFocus","defaultValue","maxLength","number","func","placeholder","placeholderTextColor","ColorPropType","isRequired","TextInputStylePropTypes","any","StyleSheet","MozAppearance","WebkitAppearance","backgroundColor","borderColor","borderRadius","borderStyle","borderWidth","boxSizing","fontFamily","fontSize","padding","resize"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport applyLayout from '../../modules/applyLayout';\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from '../ColorPropType';\nimport createElement from '../createElement';\nimport findNodeHandle from '../findNodeHandle';\nimport StyleSheet from '../StyleSheet';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport TextInputStylePropTypes from './TextInputStylePropTypes';\nimport TextInputState from '../../modules/TextInputState';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n/**\n * React Native events differ from W3C events.\n */\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end; // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          onChangeText = _this$props.onChangeText;\n      var text = e.nativeEvent.text;\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props2 = _this.props,\n          clearTextOnFocus = _this$props2.clearTextOnFocus,\n          onFocus = _this$props2.onFocus,\n          selectTextOnFocus = _this$props2.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation(); // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props3 = _this.props,\n          blurOnSubmit = _this$props3.blurOnSubmit,\n          multiline = _this$props3.multiline,\n          onKeyPress = _this$props3.onKeyPress,\n          onSubmitEditing = _this$props3.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          // $FlowFixMe\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props4 = _this.props,\n          onSelectionChange = _this$props4.onSelectionChange,\n          _this$props4$selectio = _this$props4.selection,\n          selection = _this$props4$selectio === void 0 ? emptyObject : _this$props4$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        autoComplete = _this$props5.autoComplete,\n        autoCorrect = _this$props5.autoCorrect,\n        editable = _this$props5.editable,\n        keyboardType = _this$props5.keyboardType,\n        multiline = _this$props5.multiline,\n        numberOfLines = _this$props5.numberOfLines,\n        secureTextEntry = _this$props5.secureTextEntry,\n        style = _this$props5.style,\n        blurOnSubmit = _this$props5.blurOnSubmit,\n        clearTextOnFocus = _this$props5.clearTextOnFocus,\n        onChangeText = _this$props5.onChangeText,\n        onLayout = _this$props5.onLayout,\n        onSelectionChange = _this$props5.onSelectionChange,\n        onSubmitEditing = _this$props5.onSubmitEditing,\n        selection = _this$props5.selection,\n        selectTextOnFocus = _this$props5.selectTextOnFocus,\n        spellCheck = _this$props5.spellCheck,\n        accessibilityViewIsModal = _this$props5.accessibilityViewIsModal,\n        allowFontScaling = _this$props5.allowFontScaling,\n        caretHidden = _this$props5.caretHidden,\n        clearButtonMode = _this$props5.clearButtonMode,\n        dataDetectorTypes = _this$props5.dataDetectorTypes,\n        disableFullscreenUI = _this$props5.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props5.enablesReturnKeyAutomatically,\n        hitSlop = _this$props5.hitSlop,\n        inlineImageLeft = _this$props5.inlineImageLeft,\n        inlineImagePadding = _this$props5.inlineImagePadding,\n        inputAccessoryViewID = _this$props5.inputAccessoryViewID,\n        keyboardAppearance = _this$props5.keyboardAppearance,\n        needsOffscreenAlphaCompositing = _this$props5.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props5.onAccessibilityTap,\n        onContentSizeChange = _this$props5.onContentSizeChange,\n        onEndEditing = _this$props5.onEndEditing,\n        onMagicTap = _this$props5.onMagicTap,\n        onScroll = _this$props5.onScroll,\n        removeClippedSubviews = _this$props5.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props5.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props5.returnKeyLabel,\n        returnKeyType = _this$props5.returnKeyType,\n        scrollEnabled = _this$props5.scrollEnabled,\n        selectionColor = _this$props5.selectionColor,\n        selectionState = _this$props5.selectionState,\n        shouldRasterizeIOS = _this$props5.shouldRasterizeIOS,\n        textBreakStrategy = _this$props5.textBreakStrategy,\n        textContentType = _this$props5.textContentType,\n        underlineColorAndroid = _this$props5.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props5, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"secureTextEntry\", \"style\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"returnKeyType\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n    Object.assign(otherProps, {\n      // Browser's treat autocomplete \"off\" as \"on\"\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      dir: 'auto',\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect,\n      style: [styles.initial, style]\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false,\n  style: emptyObject\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n\n  /* react-native compat */\n\n  /* eslint-disable */\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  returnKeyType: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n  /* eslint-enable */\n\n}) : {};\nvar styles = StyleSheet.create({\n  initial: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    borderColor: 'black',\n    borderRadius: 0,\n    borderStyle: 'solid',\n    borderWidth: 0,\n    boxSizing: 'border-box',\n    fontFamily: 'System',\n    fontSize: 14,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));"]},"metadata":{},"sourceType":"script"}